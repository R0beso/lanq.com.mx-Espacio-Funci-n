##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#


server {
	listen 80;
	listen 443 ssl;
	server_name lanq.com.mx;

	# ssl on; # Desactivada, no es necesaria en configuraciones modernas de Nginx cuando se utiliza listen 443 ssl;
	ssl_certificate /etc/letsencrypt/live/lanq.com.mx/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/lanq.com.mx/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

	root /root/app2/public;
	index index.html index.htm index.nginx-debian.html;


		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# try_files $uri $uri/ =404;


	# Configuración para servir archivos .jar
	location ~ \.jar$ {
	    default_type application/java-archive;
	    root /path/to/jar/files;
	}

	# Configuración del proxy para Node.js
	location / {
	    proxy_pass http://localhost:3108;
	    proxy_http_version 1.1;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection "upgrade";
	    proxy_set_header Host $host;
	    proxy_cache_bypass $http_upgrade;
	}


}




